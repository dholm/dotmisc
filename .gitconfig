[color]
    ui = auto
    diff = auto
[color "branch"]
    current = yellow reverse
    local = yellow
    remote = green
    upstream = normal bold
[color "diff"]
    meta = yellow bold
    frag = magenta bold
    old = red
    new = green

[format]
    pretty = format:%C(blue)%ad%C(reset) %x09%C(yellow)%h%C(green)%d%C(reset) %C(blue)%s %C(magenta) [%an]%C(reset)

[grep]
    extendedRegexp = true

[mergetool]
    prompt = no
[mergetool "vim"]
    cmd = vim -f -c 'Gdiff' $MERGED
    keepbackup = false
[mergetool "emacs"]
    cmd = emacs -Q -nw -l ~/.emacs.d/basic.el --mergetool $LOCAL $REMOTE $BASE $MERGED
[merge]
    summary = true
    verbosity = 1
    tool = "emacs"
    stat = true

[branch]
    autosetupmerge = true

[push]
    default = tracking

[core]
    pager = "less -RXMi"
    autocrlf = false
    editor = "vim --noplugin"
    whitespace = cr-at-eol,trailiing-space,space-before-tab,tabwidth=8
    preloadindex = true
    excludesfile = ~/.gitignore.core

[advice]
    statusHints = false

[difftool]
    prompt = no
[difftool "emacs"]
    cmd = emacs -Q -nw -l ~/.emacs.d/basic.el --difftool $LOCAL $REMOTE
[diff]
    mnemonicprefix = true
    renames = true
    renamelimit = 3000
[difftool]
    prompt = false

[rerere]
    enabled = true

[alias]
    ###
    # Help commands.
    ls-alias = !git config -l | grep alias | cut -c 7- | sed -e s/=/¤/ | column -t -s ¤ | grep -v ls-alias

    ###
    # Locating content and paths.
    root = rev-parse --show-toplevel
    find-file = "!f() { git ls-files | egrep "$1"; }; f"
    find-string = log --diff-filter=M --patch -S
    when-rm = log --diff-filter=D --summary --
    when-add = log --diff-filter=A --name-status
    grp = grep --break --heading --line-number

    ###
    # Finding refspecs.
    head = rev-list -n1 --abbrev-commit HEAD
    latest-tag = describe --tags --abbrev=0

    ###
    # Reviewing history.
    logb = log --first-parent
    logg = log --graph --abbrev-commit --decorate --date=relative
    logs = log --graph --abbrev-commit --decorate --date=relative --stat
    logp = log --graph --abbrev-commit --decorate --date=relative --patch --cc -w

    ##
    # Common commands that ignore changes to whitespace.
    shw = show --ignore-all-space
    dff = diff --ignore-all-space
    mrg = merge -Xignore-space-at-eol
    rbs = rebase -Xignore-space-at-eol

    ###
    # Manipulating file states.
    unmerge = checkout -m
    ls-assume = !git ls-files -v | grep ^h | cut -c 3-
    assume = update-index --assume-unchanged
    assume-all = !git st -s | awk {'print $2'} | xargs git assume
    unassume = update-index --no-assume-unchanged
    unassume-all = !git assumed | xargs git update-index --no-assume-unchanged

    ###
    # Manipulating branches.
    branch-done = "!f() { git branch | grep "$1" | cut -c 3- | grep -v done | xargs -I{} git branch -m {} done/{}; }; f"

[include]
    path = .gitconfig.local

[difftool "ediff"]
    cmd = $HOME/.dotfiles/misc/bin/ediff.sh "$LOCAL" "$REMOTE" "$MERGED"
[mergetool "ediff"]
    cmd = $HOME/.dotfiles/misc/bin/ediff.sh "$LOCAL" "$REMOTE" "$MERGED" "$BASE"
    trustExitCode = true
